package com.kidaristudio.gwp.backend.front.core.enum

enum class CountryCode(
    val label: String? = null,
    val adultAge: Int = 0,
    val matureAge: Int = 0,
    val delegation: String? = null,
) {
    kr("kr", 19),
    gh("gh", 19, "jp"),
    ga("ga", 19, "jp"),
    gy("gy", 19, "jp"),
    gm("gm", 19, "jp"),
    gg("gg", 19, "jp"),
    gp("gp", 19, "jp"),
    gt("gt", 19, "jp"),
    gu("gu", 19, "jp"),
    gd("gd", 19, "jp"),
    ge("ge", 19, "jp"),
    gr("gr", 19, "jp"),
    gl("gl", 19, "jp"),
    gn("gn", 19, "jp"),
    gw("gw", 19, "jp"),
    na("na", 19, "jp"),
    nr("nr", 19, "jp"),
    ng("ng", 19, "jp"),
    aq("aq", 19, "jp"),
    za("za", 19, "jp"),
    nl("nl", 19, "jp"),
    an("an", 19, "jp"),
    np("np", 19, "jp"),
    no("no", 19, "jp"),
    nf("nf", 19, "jp"),
    nc("nc", 19, "jp"),
    nz("nz", 19, "jp"),
    nu("nu", 19, "jp"),
    ne("ne", 19, "jp"),
    ni("ni", 19, "jp"),
    dk("dk", 19, "jp"),
    dm("dm", 19, "jp"),
    de("de", 19, "jp"),
    tl("tl", 19, "jp"),
    la("la", 19, "jp"),
    lr("lr", 19, "jp"),
    lv("lv", 19, "jp"),
    ru("ru", 19, "jp"),
    lb("lb", 19, "jp"),
    ls("ls", 19, "jp"),
    re("re", 19, "jp"),
    ro("ro", 19, "jp"),
    lu("lu", 19, "jp"),
    rw("rw", 19, "jp"),
    ly("ly", 19, "jp"),
    lt("lt", 19, "jp"),
    li("li", 19, "jp"),
    mg("mg", 19, "jp"),
    mq("mq", 19, "jp"),
    mh("mh", 19, "jp"),
    yt("yt", 19, "jp"),
    mo("mo", 19, "jp"),
    mk("mk", 19, "jp"),
    mw("mw", 19, "jp"),
    my("my", 19, "jp"),
    ml("ml", 19, "jp"),
    im("im", 19, "jp"),
    mx("mx", 19, "jp"),
    mc("mc", 19, "jp"),
    ma("ma", 19, "jp"),
    mu("mu", 19, "jp"),
    mr("mr", 19, "jp"),
    mz("mz", 19, "jp"),
    me("me", 19, "jp"),
    ms("ms", 19, "jp"),
    md("md", 19, "jp"),
    mv("mv", 19, "jp"),
    mt("mt", 19, "jp"),
    mn("mn", 19, "jp"),
    us("us", 19, "kr"),
    um("um", 19, "jp"),
    vi("vi", 19, "jp"),
    mm("mm", 19, "jp"),
    fm("fm", 19, "jp"),
    vu("vu", 19, "jp"),
    bh("bh", 19, "jp"),
    bb("bb", 19, "jp"),
    va("va", 19, "jp"),
    bs("bs", 19, "jp"),
    bd("bd", 19, "jp"),
    bm("bm", 19, "jp"),
    bj("bj", 19, "jp"),
    ve("ve", 19, "jp"),
    vn("vn", 19, "jp"),
    be("be", 19, "jp"),
    by("by", 19, "jp"),
    bz("bz", 19, "jp"),
    ba("ba", 19, "jp"),
    bw("bw", 19, "jp"),
    bo("bo", 19, "jp"),
    bi("bi", 19, "jp"),
    bf("bf", 19, "jp"),
    bv("bv", 19, "jp"),
    bt("bt", 19, "jp"),
    mp("mp", 19, "jp"),
    bg("bg", 19, "jp"),
    br("br", 19, "jp"),
    bn("bn", 19, "jp"),
    ws("ws", 19, "jp"),
    sa("sa", 19, "jp"),
    gs("gs", 19, "jp"),
    sm("sm", 19, "jp"),
    st("st", 19, "jp"),
    pm("pm", 19, "jp"),
    eh("eh", 19, "jp"),
    sn("sn", 19, "jp"),
    rs("rs", 19, "jp"),
    sc("sc", 19, "jp"),
    lc("lc", 19, "jp"),
    vc("vc", 19, "jp"),
    kn("kn", 19, "jp"),
    sh("sh", 19, "jp"),
    so("so", 19, "jp"),
    sb("sb", 19, "jp"),
    sd("sd", 19, "jp"),
    sr("sr", 19, "jp"),
    lk("lk", 19, "jp"),
    sj("sj", 19, "jp"),
    sz("sz", 19, "jp"),
    se("se", 19, "jp"),
    ch("ch", 19, "jp"),
    es("es", 19, "jp"),
    sk("sk", 19, "jp"),
    si("si", 19, "jp"),
    sy("sy", 19, "jp"),
    sl("sl", 19, "jp"),
    sg("sg", 19, "jp"),
    ae("ae", 19, "jp"),
    aw("aw", 19, "jp"),
    am("am", 19, "jp"),
    ar("ar", 19, "jp"),
    `as`("as", 19, "jp"),
    `is`("is", 19, "jp"),
    ht("ht", 19, "jp"),
    ie("ie", 19, "jp"),
    az("az", 19, "jp"),
    af("af", 19, "jp"),
    ad("ad", 19, "jp"),
    al("al", 19, "jp"),
    dz("dz", 19, "jp"),
    ao("ao", 19, "jp"),
    ag("ag", 19, "jp"),
    ai("ai", 19, "jp"),
    er("er", 19, "jp"),
    ee("ee", 19, "jp"),
    ec("ec", 19, "jp"),
    et("et", 19, "jp"),
    sv("sv", 19, "jp"),
    gb("gb", 19, "jp"),
    vg("vg", 19, "jp"),
    io("io", 19, "jp"),
    ye("ye", 19, "jp"),
    om("om", 19, "jp"),
    au("au", 19, "jp"),
    at("at", 19, "jp"),
    hn("hn", 19, "jp"),
    ax("ax", 19, "jp"),
    jo("jo", 19, "jp"),
    ug("ug", 19, "jp"),
    uy("uy", 19, "jp"),
    uz("uz", 19, "jp"),
    ua("ua", 19, "jp"),
    wf("wf", 19, "jp"),
    iq("iq", 19, "jp"),
    ir("ir", 19, "jp"),
    il("il", 19, "jp"),
    eg("eg", 19, "jp"),
    it("it", 19, "jp"),
    id("id", 19, "jp"),
    `in`("in", 19, "jp"),
    jp("jp", 19),
    jm("jm", 19, "jp"),
    zm("zm", 19, "jp"),
    je("je", 19, "jp"),
    gq("gq", 19, "jp"),
    kp("kp", 19, "jp"),
    cf("cf", 19, "jp"),
    tw("tw", 19, "jp"),
    cn("cn", 19, "jp"),
    dj("dj", 19, "jp"),
    gi("gi", 19, "jp"),
    zw("zw", 19, "jp"),
    td("td", 19, "jp"),
    cz("cz", 19, "jp"),
    cl("cl", 19, "jp"),
    cm("cm", 19, "jp"),
    cv("cv", 19, "jp"),
    kz("kz", 19, "jp"),
    qa("qa", 19, "jp"),
    kh("kh", 19, "jp"),
    ca("ca", 19, "jp"),
    ke("ke", 19, "jp"),
    ky("ky", 19, "jp"),
    km("km", 19, "jp"),
    cr("cr", 19, "jp"),
    cc("cc", 19, "jp"),
    ci("ci", 19, "jp"),
    co("co", 19, "jp"),
    cg("cg", 19, "jp"),
    cd("cd", 19, "jp"),
    cu("cu", 19, "jp"),
    kw("kw", 19, "jp"),
    ck("ck", 19, "jp"),
    hr("hr", 19, "jp"),
    cx("cx", 19, "jp"),
    kg("kg", 19, "jp"),
    ki("ki", 19, "jp"),
    cy("cy", 19, "jp"),
    th("th", 19, "jp"),
    tj("tj", 19, "jp"),
    tz("tz", 19, "jp"),
    tc("tc", 19, "jp"),
    tr("tr", 19, "jp"),
    tg("tg", 19, "jp"),
    tk("tk", 19, "jp"),
    to("to", 19, "jp"),
    tm("tm", 19, "jp"),
    tv("tv", 19, "jp"),
    tn("tn", 19, "jp"),
    tt("tt", 19, "jp"),
    pa("pa", 19, "jp"),
    py("py", 19, "jp"),
    pk("pk", 19, "jp"),
    pg("pg", 19, "jp"),
    pw("pw", 19, "jp"),
    ps("ps", 19, "jp"),
    fo("fo", 19, "jp"),
    pe("pe", 19, "jp"),
    pt("pt", 19, "jp"),
    fk("fk", 19, "jp"),
    pl("pl", 19, "jp"),
    pr("pr", 19, "jp"),
    fr("fr", 19, "jp"),
    gf("gf", 19, "jp"),
    tf("tf", 19, "jp"),
    pf("pf", 19, "jp"),
    fj("fj", 19, "jp"),
    fi("fi", 19, "jp"),
    ph("ph", 19, "jp"),
    pn("pn", 19, "jp"),
    hm("hm", 19, "jp"),
    hu("hu", 19, "jp"),
    hk("hk", 19, "jp"),
    `do`("do", 19, "jp"); // do는 java 예약어여서 기존 서버에선 서비스 불가였음

    constructor(label: String?) : this(label, 19, "jp")

    constructor(label: String?, adultAge: Int) :
        this(label, adultAge, 17, null)

    constructor(label: String?, adultAge: Int, delegation: String?) :
        this(label, adultAge, 17, delegation)

    fun delegation() = if (delegation == null) this else valueOf(delegation)

    override fun toString() = this.name

    companion object {
        fun of(countryCode: String) = try {
            valueOf(countryCode.toLowerCase().trim())
        } catch (ignore: Exception) {
            kr
        }
    }
}